// Code generated by ent, DO NOT EDIT.

package album

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/anzhiyu-c/anheyu-app/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldID, id))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDeletedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldUpdatedAt, v))
}

// ImageURL applies equality check predicate on the "image_url" field. It's identical to ImageURLEQ.
func ImageURL(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldImageURL, v))
}

// BigImageURL applies equality check predicate on the "big_image_url" field. It's identical to BigImageURLEQ.
func BigImageURL(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldBigImageURL, v))
}

// DownloadURL applies equality check predicate on the "download_url" field. It's identical to DownloadURLEQ.
func DownloadURL(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDownloadURL, v))
}

// ThumbParam applies equality check predicate on the "thumb_param" field. It's identical to ThumbParamEQ.
func ThumbParam(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldThumbParam, v))
}

// BigParam applies equality check predicate on the "big_param" field. It's identical to BigParamEQ.
func BigParam(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldBigParam, v))
}

// Tags applies equality check predicate on the "tags" field. It's identical to TagsEQ.
func Tags(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldTags, v))
}

// ViewCount applies equality check predicate on the "view_count" field. It's identical to ViewCountEQ.
func ViewCount(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldViewCount, v))
}

// DownloadCount applies equality check predicate on the "download_count" field. It's identical to DownloadCountEQ.
func DownloadCount(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDownloadCount, v))
}

// Width applies equality check predicate on the "width" field. It's identical to WidthEQ.
func Width(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldWidth, v))
}

// Height applies equality check predicate on the "height" field. It's identical to HeightEQ.
func Height(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldHeight, v))
}

// FileSize applies equality check predicate on the "file_size" field. It's identical to FileSizeEQ.
func FileSize(v int64) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldFileSize, v))
}

// Format applies equality check predicate on the "format" field. It's identical to FormatEQ.
func Format(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldFormat, v))
}

// AspectRatio applies equality check predicate on the "aspect_ratio" field. It's identical to AspectRatioEQ.
func AspectRatio(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldAspectRatio, v))
}

// FileHash applies equality check predicate on the "file_hash" field. It's identical to FileHashEQ.
func FileHash(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldFileHash, v))
}

// DisplayOrder applies equality check predicate on the "display_order" field. It's identical to DisplayOrderEQ.
func DisplayOrder(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDisplayOrder, v))
}

// CategoryID applies equality check predicate on the "category_id" field. It's identical to CategoryIDEQ.
func CategoryID(v uint) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldCategoryID, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldDeletedAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldUpdatedAt, v))
}

// ImageURLEQ applies the EQ predicate on the "image_url" field.
func ImageURLEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldImageURL, v))
}

// ImageURLNEQ applies the NEQ predicate on the "image_url" field.
func ImageURLNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldImageURL, v))
}

// ImageURLIn applies the In predicate on the "image_url" field.
func ImageURLIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldImageURL, vs...))
}

// ImageURLNotIn applies the NotIn predicate on the "image_url" field.
func ImageURLNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldImageURL, vs...))
}

// ImageURLGT applies the GT predicate on the "image_url" field.
func ImageURLGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldImageURL, v))
}

// ImageURLGTE applies the GTE predicate on the "image_url" field.
func ImageURLGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldImageURL, v))
}

// ImageURLLT applies the LT predicate on the "image_url" field.
func ImageURLLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldImageURL, v))
}

// ImageURLLTE applies the LTE predicate on the "image_url" field.
func ImageURLLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldImageURL, v))
}

// ImageURLContains applies the Contains predicate on the "image_url" field.
func ImageURLContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldImageURL, v))
}

// ImageURLHasPrefix applies the HasPrefix predicate on the "image_url" field.
func ImageURLHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldImageURL, v))
}

// ImageURLHasSuffix applies the HasSuffix predicate on the "image_url" field.
func ImageURLHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldImageURL, v))
}

// ImageURLEqualFold applies the EqualFold predicate on the "image_url" field.
func ImageURLEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldImageURL, v))
}

// ImageURLContainsFold applies the ContainsFold predicate on the "image_url" field.
func ImageURLContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldImageURL, v))
}

// BigImageURLEQ applies the EQ predicate on the "big_image_url" field.
func BigImageURLEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldBigImageURL, v))
}

// BigImageURLNEQ applies the NEQ predicate on the "big_image_url" field.
func BigImageURLNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldBigImageURL, v))
}

// BigImageURLIn applies the In predicate on the "big_image_url" field.
func BigImageURLIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldBigImageURL, vs...))
}

// BigImageURLNotIn applies the NotIn predicate on the "big_image_url" field.
func BigImageURLNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldBigImageURL, vs...))
}

// BigImageURLGT applies the GT predicate on the "big_image_url" field.
func BigImageURLGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldBigImageURL, v))
}

// BigImageURLGTE applies the GTE predicate on the "big_image_url" field.
func BigImageURLGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldBigImageURL, v))
}

// BigImageURLLT applies the LT predicate on the "big_image_url" field.
func BigImageURLLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldBigImageURL, v))
}

// BigImageURLLTE applies the LTE predicate on the "big_image_url" field.
func BigImageURLLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldBigImageURL, v))
}

// BigImageURLContains applies the Contains predicate on the "big_image_url" field.
func BigImageURLContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldBigImageURL, v))
}

// BigImageURLHasPrefix applies the HasPrefix predicate on the "big_image_url" field.
func BigImageURLHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldBigImageURL, v))
}

// BigImageURLHasSuffix applies the HasSuffix predicate on the "big_image_url" field.
func BigImageURLHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldBigImageURL, v))
}

// BigImageURLIsNil applies the IsNil predicate on the "big_image_url" field.
func BigImageURLIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldBigImageURL))
}

// BigImageURLNotNil applies the NotNil predicate on the "big_image_url" field.
func BigImageURLNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldBigImageURL))
}

// BigImageURLEqualFold applies the EqualFold predicate on the "big_image_url" field.
func BigImageURLEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldBigImageURL, v))
}

// BigImageURLContainsFold applies the ContainsFold predicate on the "big_image_url" field.
func BigImageURLContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldBigImageURL, v))
}

// DownloadURLEQ applies the EQ predicate on the "download_url" field.
func DownloadURLEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDownloadURL, v))
}

// DownloadURLNEQ applies the NEQ predicate on the "download_url" field.
func DownloadURLNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldDownloadURL, v))
}

// DownloadURLIn applies the In predicate on the "download_url" field.
func DownloadURLIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldDownloadURL, vs...))
}

// DownloadURLNotIn applies the NotIn predicate on the "download_url" field.
func DownloadURLNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldDownloadURL, vs...))
}

// DownloadURLGT applies the GT predicate on the "download_url" field.
func DownloadURLGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldDownloadURL, v))
}

// DownloadURLGTE applies the GTE predicate on the "download_url" field.
func DownloadURLGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldDownloadURL, v))
}

// DownloadURLLT applies the LT predicate on the "download_url" field.
func DownloadURLLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldDownloadURL, v))
}

// DownloadURLLTE applies the LTE predicate on the "download_url" field.
func DownloadURLLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldDownloadURL, v))
}

// DownloadURLContains applies the Contains predicate on the "download_url" field.
func DownloadURLContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldDownloadURL, v))
}

// DownloadURLHasPrefix applies the HasPrefix predicate on the "download_url" field.
func DownloadURLHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldDownloadURL, v))
}

// DownloadURLHasSuffix applies the HasSuffix predicate on the "download_url" field.
func DownloadURLHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldDownloadURL, v))
}

// DownloadURLIsNil applies the IsNil predicate on the "download_url" field.
func DownloadURLIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldDownloadURL))
}

// DownloadURLNotNil applies the NotNil predicate on the "download_url" field.
func DownloadURLNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldDownloadURL))
}

// DownloadURLEqualFold applies the EqualFold predicate on the "download_url" field.
func DownloadURLEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldDownloadURL, v))
}

// DownloadURLContainsFold applies the ContainsFold predicate on the "download_url" field.
func DownloadURLContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldDownloadURL, v))
}

// ThumbParamEQ applies the EQ predicate on the "thumb_param" field.
func ThumbParamEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldThumbParam, v))
}

// ThumbParamNEQ applies the NEQ predicate on the "thumb_param" field.
func ThumbParamNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldThumbParam, v))
}

// ThumbParamIn applies the In predicate on the "thumb_param" field.
func ThumbParamIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldThumbParam, vs...))
}

// ThumbParamNotIn applies the NotIn predicate on the "thumb_param" field.
func ThumbParamNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldThumbParam, vs...))
}

// ThumbParamGT applies the GT predicate on the "thumb_param" field.
func ThumbParamGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldThumbParam, v))
}

// ThumbParamGTE applies the GTE predicate on the "thumb_param" field.
func ThumbParamGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldThumbParam, v))
}

// ThumbParamLT applies the LT predicate on the "thumb_param" field.
func ThumbParamLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldThumbParam, v))
}

// ThumbParamLTE applies the LTE predicate on the "thumb_param" field.
func ThumbParamLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldThumbParam, v))
}

// ThumbParamContains applies the Contains predicate on the "thumb_param" field.
func ThumbParamContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldThumbParam, v))
}

// ThumbParamHasPrefix applies the HasPrefix predicate on the "thumb_param" field.
func ThumbParamHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldThumbParam, v))
}

// ThumbParamHasSuffix applies the HasSuffix predicate on the "thumb_param" field.
func ThumbParamHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldThumbParam, v))
}

// ThumbParamIsNil applies the IsNil predicate on the "thumb_param" field.
func ThumbParamIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldThumbParam))
}

// ThumbParamNotNil applies the NotNil predicate on the "thumb_param" field.
func ThumbParamNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldThumbParam))
}

// ThumbParamEqualFold applies the EqualFold predicate on the "thumb_param" field.
func ThumbParamEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldThumbParam, v))
}

// ThumbParamContainsFold applies the ContainsFold predicate on the "thumb_param" field.
func ThumbParamContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldThumbParam, v))
}

// BigParamEQ applies the EQ predicate on the "big_param" field.
func BigParamEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldBigParam, v))
}

// BigParamNEQ applies the NEQ predicate on the "big_param" field.
func BigParamNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldBigParam, v))
}

// BigParamIn applies the In predicate on the "big_param" field.
func BigParamIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldBigParam, vs...))
}

// BigParamNotIn applies the NotIn predicate on the "big_param" field.
func BigParamNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldBigParam, vs...))
}

// BigParamGT applies the GT predicate on the "big_param" field.
func BigParamGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldBigParam, v))
}

// BigParamGTE applies the GTE predicate on the "big_param" field.
func BigParamGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldBigParam, v))
}

// BigParamLT applies the LT predicate on the "big_param" field.
func BigParamLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldBigParam, v))
}

// BigParamLTE applies the LTE predicate on the "big_param" field.
func BigParamLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldBigParam, v))
}

// BigParamContains applies the Contains predicate on the "big_param" field.
func BigParamContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldBigParam, v))
}

// BigParamHasPrefix applies the HasPrefix predicate on the "big_param" field.
func BigParamHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldBigParam, v))
}

// BigParamHasSuffix applies the HasSuffix predicate on the "big_param" field.
func BigParamHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldBigParam, v))
}

// BigParamIsNil applies the IsNil predicate on the "big_param" field.
func BigParamIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldBigParam))
}

// BigParamNotNil applies the NotNil predicate on the "big_param" field.
func BigParamNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldBigParam))
}

// BigParamEqualFold applies the EqualFold predicate on the "big_param" field.
func BigParamEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldBigParam, v))
}

// BigParamContainsFold applies the ContainsFold predicate on the "big_param" field.
func BigParamContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldBigParam, v))
}

// TagsEQ applies the EQ predicate on the "tags" field.
func TagsEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldTags, v))
}

// TagsNEQ applies the NEQ predicate on the "tags" field.
func TagsNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldTags, v))
}

// TagsIn applies the In predicate on the "tags" field.
func TagsIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldTags, vs...))
}

// TagsNotIn applies the NotIn predicate on the "tags" field.
func TagsNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldTags, vs...))
}

// TagsGT applies the GT predicate on the "tags" field.
func TagsGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldTags, v))
}

// TagsGTE applies the GTE predicate on the "tags" field.
func TagsGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldTags, v))
}

// TagsLT applies the LT predicate on the "tags" field.
func TagsLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldTags, v))
}

// TagsLTE applies the LTE predicate on the "tags" field.
func TagsLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldTags, v))
}

// TagsContains applies the Contains predicate on the "tags" field.
func TagsContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldTags, v))
}

// TagsHasPrefix applies the HasPrefix predicate on the "tags" field.
func TagsHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldTags, v))
}

// TagsHasSuffix applies the HasSuffix predicate on the "tags" field.
func TagsHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldTags, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldTags))
}

// TagsEqualFold applies the EqualFold predicate on the "tags" field.
func TagsEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldTags, v))
}

// TagsContainsFold applies the ContainsFold predicate on the "tags" field.
func TagsContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldTags, v))
}

// ViewCountEQ applies the EQ predicate on the "view_count" field.
func ViewCountEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldViewCount, v))
}

// ViewCountNEQ applies the NEQ predicate on the "view_count" field.
func ViewCountNEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldViewCount, v))
}

// ViewCountIn applies the In predicate on the "view_count" field.
func ViewCountIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldViewCount, vs...))
}

// ViewCountNotIn applies the NotIn predicate on the "view_count" field.
func ViewCountNotIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldViewCount, vs...))
}

// ViewCountGT applies the GT predicate on the "view_count" field.
func ViewCountGT(v int) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldViewCount, v))
}

// ViewCountGTE applies the GTE predicate on the "view_count" field.
func ViewCountGTE(v int) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldViewCount, v))
}

// ViewCountLT applies the LT predicate on the "view_count" field.
func ViewCountLT(v int) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldViewCount, v))
}

// ViewCountLTE applies the LTE predicate on the "view_count" field.
func ViewCountLTE(v int) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldViewCount, v))
}

// DownloadCountEQ applies the EQ predicate on the "download_count" field.
func DownloadCountEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDownloadCount, v))
}

// DownloadCountNEQ applies the NEQ predicate on the "download_count" field.
func DownloadCountNEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldDownloadCount, v))
}

// DownloadCountIn applies the In predicate on the "download_count" field.
func DownloadCountIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldDownloadCount, vs...))
}

// DownloadCountNotIn applies the NotIn predicate on the "download_count" field.
func DownloadCountNotIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldDownloadCount, vs...))
}

// DownloadCountGT applies the GT predicate on the "download_count" field.
func DownloadCountGT(v int) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldDownloadCount, v))
}

// DownloadCountGTE applies the GTE predicate on the "download_count" field.
func DownloadCountGTE(v int) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldDownloadCount, v))
}

// DownloadCountLT applies the LT predicate on the "download_count" field.
func DownloadCountLT(v int) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldDownloadCount, v))
}

// DownloadCountLTE applies the LTE predicate on the "download_count" field.
func DownloadCountLTE(v int) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldDownloadCount, v))
}

// WidthEQ applies the EQ predicate on the "width" field.
func WidthEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldWidth, v))
}

// WidthNEQ applies the NEQ predicate on the "width" field.
func WidthNEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldWidth, v))
}

// WidthIn applies the In predicate on the "width" field.
func WidthIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldWidth, vs...))
}

// WidthNotIn applies the NotIn predicate on the "width" field.
func WidthNotIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldWidth, vs...))
}

// WidthGT applies the GT predicate on the "width" field.
func WidthGT(v int) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldWidth, v))
}

// WidthGTE applies the GTE predicate on the "width" field.
func WidthGTE(v int) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldWidth, v))
}

// WidthLT applies the LT predicate on the "width" field.
func WidthLT(v int) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldWidth, v))
}

// WidthLTE applies the LTE predicate on the "width" field.
func WidthLTE(v int) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldWidth, v))
}

// WidthIsNil applies the IsNil predicate on the "width" field.
func WidthIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldWidth))
}

// WidthNotNil applies the NotNil predicate on the "width" field.
func WidthNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldWidth))
}

// HeightEQ applies the EQ predicate on the "height" field.
func HeightEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldHeight, v))
}

// HeightNEQ applies the NEQ predicate on the "height" field.
func HeightNEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldHeight, v))
}

// HeightIn applies the In predicate on the "height" field.
func HeightIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldHeight, vs...))
}

// HeightNotIn applies the NotIn predicate on the "height" field.
func HeightNotIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldHeight, vs...))
}

// HeightGT applies the GT predicate on the "height" field.
func HeightGT(v int) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldHeight, v))
}

// HeightGTE applies the GTE predicate on the "height" field.
func HeightGTE(v int) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldHeight, v))
}

// HeightLT applies the LT predicate on the "height" field.
func HeightLT(v int) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldHeight, v))
}

// HeightLTE applies the LTE predicate on the "height" field.
func HeightLTE(v int) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldHeight, v))
}

// HeightIsNil applies the IsNil predicate on the "height" field.
func HeightIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldHeight))
}

// HeightNotNil applies the NotNil predicate on the "height" field.
func HeightNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldHeight))
}

// FileSizeEQ applies the EQ predicate on the "file_size" field.
func FileSizeEQ(v int64) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldFileSize, v))
}

// FileSizeNEQ applies the NEQ predicate on the "file_size" field.
func FileSizeNEQ(v int64) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldFileSize, v))
}

// FileSizeIn applies the In predicate on the "file_size" field.
func FileSizeIn(vs ...int64) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldFileSize, vs...))
}

// FileSizeNotIn applies the NotIn predicate on the "file_size" field.
func FileSizeNotIn(vs ...int64) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldFileSize, vs...))
}

// FileSizeGT applies the GT predicate on the "file_size" field.
func FileSizeGT(v int64) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldFileSize, v))
}

// FileSizeGTE applies the GTE predicate on the "file_size" field.
func FileSizeGTE(v int64) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldFileSize, v))
}

// FileSizeLT applies the LT predicate on the "file_size" field.
func FileSizeLT(v int64) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldFileSize, v))
}

// FileSizeLTE applies the LTE predicate on the "file_size" field.
func FileSizeLTE(v int64) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldFileSize, v))
}

// FileSizeIsNil applies the IsNil predicate on the "file_size" field.
func FileSizeIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldFileSize))
}

// FileSizeNotNil applies the NotNil predicate on the "file_size" field.
func FileSizeNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldFileSize))
}

// FormatEQ applies the EQ predicate on the "format" field.
func FormatEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldFormat, v))
}

// FormatNEQ applies the NEQ predicate on the "format" field.
func FormatNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldFormat, v))
}

// FormatIn applies the In predicate on the "format" field.
func FormatIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldFormat, vs...))
}

// FormatNotIn applies the NotIn predicate on the "format" field.
func FormatNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldFormat, vs...))
}

// FormatGT applies the GT predicate on the "format" field.
func FormatGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldFormat, v))
}

// FormatGTE applies the GTE predicate on the "format" field.
func FormatGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldFormat, v))
}

// FormatLT applies the LT predicate on the "format" field.
func FormatLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldFormat, v))
}

// FormatLTE applies the LTE predicate on the "format" field.
func FormatLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldFormat, v))
}

// FormatContains applies the Contains predicate on the "format" field.
func FormatContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldFormat, v))
}

// FormatHasPrefix applies the HasPrefix predicate on the "format" field.
func FormatHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldFormat, v))
}

// FormatHasSuffix applies the HasSuffix predicate on the "format" field.
func FormatHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldFormat, v))
}

// FormatIsNil applies the IsNil predicate on the "format" field.
func FormatIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldFormat))
}

// FormatNotNil applies the NotNil predicate on the "format" field.
func FormatNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldFormat))
}

// FormatEqualFold applies the EqualFold predicate on the "format" field.
func FormatEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldFormat, v))
}

// FormatContainsFold applies the ContainsFold predicate on the "format" field.
func FormatContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldFormat, v))
}

// AspectRatioEQ applies the EQ predicate on the "aspect_ratio" field.
func AspectRatioEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldAspectRatio, v))
}

// AspectRatioNEQ applies the NEQ predicate on the "aspect_ratio" field.
func AspectRatioNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldAspectRatio, v))
}

// AspectRatioIn applies the In predicate on the "aspect_ratio" field.
func AspectRatioIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldAspectRatio, vs...))
}

// AspectRatioNotIn applies the NotIn predicate on the "aspect_ratio" field.
func AspectRatioNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldAspectRatio, vs...))
}

// AspectRatioGT applies the GT predicate on the "aspect_ratio" field.
func AspectRatioGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldAspectRatio, v))
}

// AspectRatioGTE applies the GTE predicate on the "aspect_ratio" field.
func AspectRatioGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldAspectRatio, v))
}

// AspectRatioLT applies the LT predicate on the "aspect_ratio" field.
func AspectRatioLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldAspectRatio, v))
}

// AspectRatioLTE applies the LTE predicate on the "aspect_ratio" field.
func AspectRatioLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldAspectRatio, v))
}

// AspectRatioContains applies the Contains predicate on the "aspect_ratio" field.
func AspectRatioContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldAspectRatio, v))
}

// AspectRatioHasPrefix applies the HasPrefix predicate on the "aspect_ratio" field.
func AspectRatioHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldAspectRatio, v))
}

// AspectRatioHasSuffix applies the HasSuffix predicate on the "aspect_ratio" field.
func AspectRatioHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldAspectRatio, v))
}

// AspectRatioIsNil applies the IsNil predicate on the "aspect_ratio" field.
func AspectRatioIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldAspectRatio))
}

// AspectRatioNotNil applies the NotNil predicate on the "aspect_ratio" field.
func AspectRatioNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldAspectRatio))
}

// AspectRatioEqualFold applies the EqualFold predicate on the "aspect_ratio" field.
func AspectRatioEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldAspectRatio, v))
}

// AspectRatioContainsFold applies the ContainsFold predicate on the "aspect_ratio" field.
func AspectRatioContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldAspectRatio, v))
}

// FileHashEQ applies the EQ predicate on the "file_hash" field.
func FileHashEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldFileHash, v))
}

// FileHashNEQ applies the NEQ predicate on the "file_hash" field.
func FileHashNEQ(v string) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldFileHash, v))
}

// FileHashIn applies the In predicate on the "file_hash" field.
func FileHashIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldFileHash, vs...))
}

// FileHashNotIn applies the NotIn predicate on the "file_hash" field.
func FileHashNotIn(vs ...string) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldFileHash, vs...))
}

// FileHashGT applies the GT predicate on the "file_hash" field.
func FileHashGT(v string) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldFileHash, v))
}

// FileHashGTE applies the GTE predicate on the "file_hash" field.
func FileHashGTE(v string) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldFileHash, v))
}

// FileHashLT applies the LT predicate on the "file_hash" field.
func FileHashLT(v string) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldFileHash, v))
}

// FileHashLTE applies the LTE predicate on the "file_hash" field.
func FileHashLTE(v string) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldFileHash, v))
}

// FileHashContains applies the Contains predicate on the "file_hash" field.
func FileHashContains(v string) predicate.Album {
	return predicate.Album(sql.FieldContains(FieldFileHash, v))
}

// FileHashHasPrefix applies the HasPrefix predicate on the "file_hash" field.
func FileHashHasPrefix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasPrefix(FieldFileHash, v))
}

// FileHashHasSuffix applies the HasSuffix predicate on the "file_hash" field.
func FileHashHasSuffix(v string) predicate.Album {
	return predicate.Album(sql.FieldHasSuffix(FieldFileHash, v))
}

// FileHashEqualFold applies the EqualFold predicate on the "file_hash" field.
func FileHashEqualFold(v string) predicate.Album {
	return predicate.Album(sql.FieldEqualFold(FieldFileHash, v))
}

// FileHashContainsFold applies the ContainsFold predicate on the "file_hash" field.
func FileHashContainsFold(v string) predicate.Album {
	return predicate.Album(sql.FieldContainsFold(FieldFileHash, v))
}

// DisplayOrderEQ applies the EQ predicate on the "display_order" field.
func DisplayOrderEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldDisplayOrder, v))
}

// DisplayOrderNEQ applies the NEQ predicate on the "display_order" field.
func DisplayOrderNEQ(v int) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldDisplayOrder, v))
}

// DisplayOrderIn applies the In predicate on the "display_order" field.
func DisplayOrderIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldDisplayOrder, vs...))
}

// DisplayOrderNotIn applies the NotIn predicate on the "display_order" field.
func DisplayOrderNotIn(vs ...int) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldDisplayOrder, vs...))
}

// DisplayOrderGT applies the GT predicate on the "display_order" field.
func DisplayOrderGT(v int) predicate.Album {
	return predicate.Album(sql.FieldGT(FieldDisplayOrder, v))
}

// DisplayOrderGTE applies the GTE predicate on the "display_order" field.
func DisplayOrderGTE(v int) predicate.Album {
	return predicate.Album(sql.FieldGTE(FieldDisplayOrder, v))
}

// DisplayOrderLT applies the LT predicate on the "display_order" field.
func DisplayOrderLT(v int) predicate.Album {
	return predicate.Album(sql.FieldLT(FieldDisplayOrder, v))
}

// DisplayOrderLTE applies the LTE predicate on the "display_order" field.
func DisplayOrderLTE(v int) predicate.Album {
	return predicate.Album(sql.FieldLTE(FieldDisplayOrder, v))
}

// CategoryIDEQ applies the EQ predicate on the "category_id" field.
func CategoryIDEQ(v uint) predicate.Album {
	return predicate.Album(sql.FieldEQ(FieldCategoryID, v))
}

// CategoryIDNEQ applies the NEQ predicate on the "category_id" field.
func CategoryIDNEQ(v uint) predicate.Album {
	return predicate.Album(sql.FieldNEQ(FieldCategoryID, v))
}

// CategoryIDIn applies the In predicate on the "category_id" field.
func CategoryIDIn(vs ...uint) predicate.Album {
	return predicate.Album(sql.FieldIn(FieldCategoryID, vs...))
}

// CategoryIDNotIn applies the NotIn predicate on the "category_id" field.
func CategoryIDNotIn(vs ...uint) predicate.Album {
	return predicate.Album(sql.FieldNotIn(FieldCategoryID, vs...))
}

// CategoryIDIsNil applies the IsNil predicate on the "category_id" field.
func CategoryIDIsNil() predicate.Album {
	return predicate.Album(sql.FieldIsNull(FieldCategoryID))
}

// CategoryIDNotNil applies the NotNil predicate on the "category_id" field.
func CategoryIDNotNil() predicate.Album {
	return predicate.Album(sql.FieldNotNull(FieldCategoryID))
}

// HasCategory applies the HasEdge predicate on the "category" edge.
func HasCategory() predicate.Album {
	return predicate.Album(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CategoryTable, CategoryColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCategoryWith applies the HasEdge predicate on the "category" edge with a given conditions (other predicates).
func HasCategoryWith(preds ...predicate.AlbumCategory) predicate.Album {
	return predicate.Album(func(s *sql.Selector) {
		step := newCategoryStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Album) predicate.Album {
	return predicate.Album(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Album) predicate.Album {
	return predicate.Album(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Album) predicate.Album {
	return predicate.Album(sql.NotPredicates(p))
}
