// Code generated by ent, DO NOT EDIT.

package article

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/anzhiyu-c/anheyu-app/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uint) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldID, id))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldDeletedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldUpdatedAt, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitle, v))
}

// ContentMd applies equality check predicate on the "content_md" field. It's identical to ContentMdEQ.
func ContentMd(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldContentMd, v))
}

// ContentHTML applies equality check predicate on the "content_html" field. It's identical to ContentHTMLEQ.
func ContentHTML(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldContentHTML, v))
}

// CoverURL applies equality check predicate on the "cover_url" field. It's identical to CoverURLEQ.
func CoverURL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCoverURL, v))
}

// ViewCount applies equality check predicate on the "view_count" field. It's identical to ViewCountEQ.
func ViewCount(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldViewCount, v))
}

// WordCount applies equality check predicate on the "word_count" field. It's identical to WordCountEQ.
func WordCount(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldWordCount, v))
}

// ReadingTime applies equality check predicate on the "reading_time" field. It's identical to ReadingTimeEQ.
func ReadingTime(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldReadingTime, v))
}

// IPLocation applies equality check predicate on the "ip_location" field. It's identical to IPLocationEQ.
func IPLocation(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldIPLocation, v))
}

// PrimaryColor applies equality check predicate on the "primary_color" field. It's identical to PrimaryColorEQ.
func PrimaryColor(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPrimaryColor, v))
}

// IsPrimaryColorManual applies equality check predicate on the "is_primary_color_manual" field. It's identical to IsPrimaryColorManualEQ.
func IsPrimaryColorManual(v bool) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldIsPrimaryColorManual, v))
}

// HomeSort applies equality check predicate on the "home_sort" field. It's identical to HomeSortEQ.
func HomeSort(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldHomeSort, v))
}

// PinSort applies equality check predicate on the "pin_sort" field. It's identical to PinSortEQ.
func PinSort(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPinSort, v))
}

// TopImgURL applies equality check predicate on the "top_img_url" field. It's identical to TopImgURLEQ.
func TopImgURL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTopImgURL, v))
}

// Abbrlink applies equality check predicate on the "abbrlink" field. It's identical to AbbrlinkEQ.
func Abbrlink(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldAbbrlink, v))
}

// Copyright applies equality check predicate on the "copyright" field. It's identical to CopyrightEQ.
func Copyright(v bool) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyright, v))
}

// CopyrightAuthor applies equality check predicate on the "copyright_author" field. It's identical to CopyrightAuthorEQ.
func CopyrightAuthor(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyrightAuthor, v))
}

// CopyrightAuthorHref applies equality check predicate on the "copyright_author_href" field. It's identical to CopyrightAuthorHrefEQ.
func CopyrightAuthorHref(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyrightAuthorHref, v))
}

// CopyrightURL applies equality check predicate on the "copyright_url" field. It's identical to CopyrightURLEQ.
func CopyrightURL(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyrightURL, v))
}

// Keywords applies equality check predicate on the "keywords" field. It's identical to KeywordsEQ.
func Keywords(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldKeywords, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldDeletedAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldUpdatedAt, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTitle, v))
}

// ContentMdEQ applies the EQ predicate on the "content_md" field.
func ContentMdEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldContentMd, v))
}

// ContentMdNEQ applies the NEQ predicate on the "content_md" field.
func ContentMdNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldContentMd, v))
}

// ContentMdIn applies the In predicate on the "content_md" field.
func ContentMdIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldContentMd, vs...))
}

// ContentMdNotIn applies the NotIn predicate on the "content_md" field.
func ContentMdNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldContentMd, vs...))
}

// ContentMdGT applies the GT predicate on the "content_md" field.
func ContentMdGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldContentMd, v))
}

// ContentMdGTE applies the GTE predicate on the "content_md" field.
func ContentMdGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldContentMd, v))
}

// ContentMdLT applies the LT predicate on the "content_md" field.
func ContentMdLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldContentMd, v))
}

// ContentMdLTE applies the LTE predicate on the "content_md" field.
func ContentMdLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldContentMd, v))
}

// ContentMdContains applies the Contains predicate on the "content_md" field.
func ContentMdContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldContentMd, v))
}

// ContentMdHasPrefix applies the HasPrefix predicate on the "content_md" field.
func ContentMdHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldContentMd, v))
}

// ContentMdHasSuffix applies the HasSuffix predicate on the "content_md" field.
func ContentMdHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldContentMd, v))
}

// ContentMdIsNil applies the IsNil predicate on the "content_md" field.
func ContentMdIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldContentMd))
}

// ContentMdNotNil applies the NotNil predicate on the "content_md" field.
func ContentMdNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldContentMd))
}

// ContentMdEqualFold applies the EqualFold predicate on the "content_md" field.
func ContentMdEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldContentMd, v))
}

// ContentMdContainsFold applies the ContainsFold predicate on the "content_md" field.
func ContentMdContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldContentMd, v))
}

// ContentHTMLEQ applies the EQ predicate on the "content_html" field.
func ContentHTMLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldContentHTML, v))
}

// ContentHTMLNEQ applies the NEQ predicate on the "content_html" field.
func ContentHTMLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldContentHTML, v))
}

// ContentHTMLIn applies the In predicate on the "content_html" field.
func ContentHTMLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldContentHTML, vs...))
}

// ContentHTMLNotIn applies the NotIn predicate on the "content_html" field.
func ContentHTMLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldContentHTML, vs...))
}

// ContentHTMLGT applies the GT predicate on the "content_html" field.
func ContentHTMLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldContentHTML, v))
}

// ContentHTMLGTE applies the GTE predicate on the "content_html" field.
func ContentHTMLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldContentHTML, v))
}

// ContentHTMLLT applies the LT predicate on the "content_html" field.
func ContentHTMLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldContentHTML, v))
}

// ContentHTMLLTE applies the LTE predicate on the "content_html" field.
func ContentHTMLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldContentHTML, v))
}

// ContentHTMLContains applies the Contains predicate on the "content_html" field.
func ContentHTMLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldContentHTML, v))
}

// ContentHTMLHasPrefix applies the HasPrefix predicate on the "content_html" field.
func ContentHTMLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldContentHTML, v))
}

// ContentHTMLHasSuffix applies the HasSuffix predicate on the "content_html" field.
func ContentHTMLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldContentHTML, v))
}

// ContentHTMLIsNil applies the IsNil predicate on the "content_html" field.
func ContentHTMLIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldContentHTML))
}

// ContentHTMLNotNil applies the NotNil predicate on the "content_html" field.
func ContentHTMLNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldContentHTML))
}

// ContentHTMLEqualFold applies the EqualFold predicate on the "content_html" field.
func ContentHTMLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldContentHTML, v))
}

// ContentHTMLContainsFold applies the ContainsFold predicate on the "content_html" field.
func ContentHTMLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldContentHTML, v))
}

// CoverURLEQ applies the EQ predicate on the "cover_url" field.
func CoverURLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCoverURL, v))
}

// CoverURLNEQ applies the NEQ predicate on the "cover_url" field.
func CoverURLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCoverURL, v))
}

// CoverURLIn applies the In predicate on the "cover_url" field.
func CoverURLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCoverURL, vs...))
}

// CoverURLNotIn applies the NotIn predicate on the "cover_url" field.
func CoverURLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCoverURL, vs...))
}

// CoverURLGT applies the GT predicate on the "cover_url" field.
func CoverURLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCoverURL, v))
}

// CoverURLGTE applies the GTE predicate on the "cover_url" field.
func CoverURLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCoverURL, v))
}

// CoverURLLT applies the LT predicate on the "cover_url" field.
func CoverURLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCoverURL, v))
}

// CoverURLLTE applies the LTE predicate on the "cover_url" field.
func CoverURLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCoverURL, v))
}

// CoverURLContains applies the Contains predicate on the "cover_url" field.
func CoverURLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldCoverURL, v))
}

// CoverURLHasPrefix applies the HasPrefix predicate on the "cover_url" field.
func CoverURLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldCoverURL, v))
}

// CoverURLHasSuffix applies the HasSuffix predicate on the "cover_url" field.
func CoverURLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldCoverURL, v))
}

// CoverURLIsNil applies the IsNil predicate on the "cover_url" field.
func CoverURLIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldCoverURL))
}

// CoverURLNotNil applies the NotNil predicate on the "cover_url" field.
func CoverURLNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldCoverURL))
}

// CoverURLEqualFold applies the EqualFold predicate on the "cover_url" field.
func CoverURLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldCoverURL, v))
}

// CoverURLContainsFold applies the ContainsFold predicate on the "cover_url" field.
func CoverURLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldCoverURL, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldStatus, vs...))
}

// ViewCountEQ applies the EQ predicate on the "view_count" field.
func ViewCountEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldViewCount, v))
}

// ViewCountNEQ applies the NEQ predicate on the "view_count" field.
func ViewCountNEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldViewCount, v))
}

// ViewCountIn applies the In predicate on the "view_count" field.
func ViewCountIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldViewCount, vs...))
}

// ViewCountNotIn applies the NotIn predicate on the "view_count" field.
func ViewCountNotIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldViewCount, vs...))
}

// ViewCountGT applies the GT predicate on the "view_count" field.
func ViewCountGT(v int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldViewCount, v))
}

// ViewCountGTE applies the GTE predicate on the "view_count" field.
func ViewCountGTE(v int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldViewCount, v))
}

// ViewCountLT applies the LT predicate on the "view_count" field.
func ViewCountLT(v int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldViewCount, v))
}

// ViewCountLTE applies the LTE predicate on the "view_count" field.
func ViewCountLTE(v int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldViewCount, v))
}

// WordCountEQ applies the EQ predicate on the "word_count" field.
func WordCountEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldWordCount, v))
}

// WordCountNEQ applies the NEQ predicate on the "word_count" field.
func WordCountNEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldWordCount, v))
}

// WordCountIn applies the In predicate on the "word_count" field.
func WordCountIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldWordCount, vs...))
}

// WordCountNotIn applies the NotIn predicate on the "word_count" field.
func WordCountNotIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldWordCount, vs...))
}

// WordCountGT applies the GT predicate on the "word_count" field.
func WordCountGT(v int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldWordCount, v))
}

// WordCountGTE applies the GTE predicate on the "word_count" field.
func WordCountGTE(v int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldWordCount, v))
}

// WordCountLT applies the LT predicate on the "word_count" field.
func WordCountLT(v int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldWordCount, v))
}

// WordCountLTE applies the LTE predicate on the "word_count" field.
func WordCountLTE(v int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldWordCount, v))
}

// ReadingTimeEQ applies the EQ predicate on the "reading_time" field.
func ReadingTimeEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldReadingTime, v))
}

// ReadingTimeNEQ applies the NEQ predicate on the "reading_time" field.
func ReadingTimeNEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldReadingTime, v))
}

// ReadingTimeIn applies the In predicate on the "reading_time" field.
func ReadingTimeIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldReadingTime, vs...))
}

// ReadingTimeNotIn applies the NotIn predicate on the "reading_time" field.
func ReadingTimeNotIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldReadingTime, vs...))
}

// ReadingTimeGT applies the GT predicate on the "reading_time" field.
func ReadingTimeGT(v int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldReadingTime, v))
}

// ReadingTimeGTE applies the GTE predicate on the "reading_time" field.
func ReadingTimeGTE(v int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldReadingTime, v))
}

// ReadingTimeLT applies the LT predicate on the "reading_time" field.
func ReadingTimeLT(v int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldReadingTime, v))
}

// ReadingTimeLTE applies the LTE predicate on the "reading_time" field.
func ReadingTimeLTE(v int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldReadingTime, v))
}

// IPLocationEQ applies the EQ predicate on the "ip_location" field.
func IPLocationEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldIPLocation, v))
}

// IPLocationNEQ applies the NEQ predicate on the "ip_location" field.
func IPLocationNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldIPLocation, v))
}

// IPLocationIn applies the In predicate on the "ip_location" field.
func IPLocationIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldIPLocation, vs...))
}

// IPLocationNotIn applies the NotIn predicate on the "ip_location" field.
func IPLocationNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldIPLocation, vs...))
}

// IPLocationGT applies the GT predicate on the "ip_location" field.
func IPLocationGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldIPLocation, v))
}

// IPLocationGTE applies the GTE predicate on the "ip_location" field.
func IPLocationGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldIPLocation, v))
}

// IPLocationLT applies the LT predicate on the "ip_location" field.
func IPLocationLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldIPLocation, v))
}

// IPLocationLTE applies the LTE predicate on the "ip_location" field.
func IPLocationLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldIPLocation, v))
}

// IPLocationContains applies the Contains predicate on the "ip_location" field.
func IPLocationContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldIPLocation, v))
}

// IPLocationHasPrefix applies the HasPrefix predicate on the "ip_location" field.
func IPLocationHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldIPLocation, v))
}

// IPLocationHasSuffix applies the HasSuffix predicate on the "ip_location" field.
func IPLocationHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldIPLocation, v))
}

// IPLocationIsNil applies the IsNil predicate on the "ip_location" field.
func IPLocationIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldIPLocation))
}

// IPLocationNotNil applies the NotNil predicate on the "ip_location" field.
func IPLocationNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldIPLocation))
}

// IPLocationEqualFold applies the EqualFold predicate on the "ip_location" field.
func IPLocationEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldIPLocation, v))
}

// IPLocationContainsFold applies the ContainsFold predicate on the "ip_location" field.
func IPLocationContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldIPLocation, v))
}

// PrimaryColorEQ applies the EQ predicate on the "primary_color" field.
func PrimaryColorEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPrimaryColor, v))
}

// PrimaryColorNEQ applies the NEQ predicate on the "primary_color" field.
func PrimaryColorNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldPrimaryColor, v))
}

// PrimaryColorIn applies the In predicate on the "primary_color" field.
func PrimaryColorIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldPrimaryColor, vs...))
}

// PrimaryColorNotIn applies the NotIn predicate on the "primary_color" field.
func PrimaryColorNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldPrimaryColor, vs...))
}

// PrimaryColorGT applies the GT predicate on the "primary_color" field.
func PrimaryColorGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldPrimaryColor, v))
}

// PrimaryColorGTE applies the GTE predicate on the "primary_color" field.
func PrimaryColorGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldPrimaryColor, v))
}

// PrimaryColorLT applies the LT predicate on the "primary_color" field.
func PrimaryColorLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldPrimaryColor, v))
}

// PrimaryColorLTE applies the LTE predicate on the "primary_color" field.
func PrimaryColorLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldPrimaryColor, v))
}

// PrimaryColorContains applies the Contains predicate on the "primary_color" field.
func PrimaryColorContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldPrimaryColor, v))
}

// PrimaryColorHasPrefix applies the HasPrefix predicate on the "primary_color" field.
func PrimaryColorHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldPrimaryColor, v))
}

// PrimaryColorHasSuffix applies the HasSuffix predicate on the "primary_color" field.
func PrimaryColorHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldPrimaryColor, v))
}

// PrimaryColorIsNil applies the IsNil predicate on the "primary_color" field.
func PrimaryColorIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldPrimaryColor))
}

// PrimaryColorNotNil applies the NotNil predicate on the "primary_color" field.
func PrimaryColorNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldPrimaryColor))
}

// PrimaryColorEqualFold applies the EqualFold predicate on the "primary_color" field.
func PrimaryColorEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldPrimaryColor, v))
}

// PrimaryColorContainsFold applies the ContainsFold predicate on the "primary_color" field.
func PrimaryColorContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldPrimaryColor, v))
}

// IsPrimaryColorManualEQ applies the EQ predicate on the "is_primary_color_manual" field.
func IsPrimaryColorManualEQ(v bool) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldIsPrimaryColorManual, v))
}

// IsPrimaryColorManualNEQ applies the NEQ predicate on the "is_primary_color_manual" field.
func IsPrimaryColorManualNEQ(v bool) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldIsPrimaryColorManual, v))
}

// HomeSortEQ applies the EQ predicate on the "home_sort" field.
func HomeSortEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldHomeSort, v))
}

// HomeSortNEQ applies the NEQ predicate on the "home_sort" field.
func HomeSortNEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldHomeSort, v))
}

// HomeSortIn applies the In predicate on the "home_sort" field.
func HomeSortIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldHomeSort, vs...))
}

// HomeSortNotIn applies the NotIn predicate on the "home_sort" field.
func HomeSortNotIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldHomeSort, vs...))
}

// HomeSortGT applies the GT predicate on the "home_sort" field.
func HomeSortGT(v int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldHomeSort, v))
}

// HomeSortGTE applies the GTE predicate on the "home_sort" field.
func HomeSortGTE(v int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldHomeSort, v))
}

// HomeSortLT applies the LT predicate on the "home_sort" field.
func HomeSortLT(v int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldHomeSort, v))
}

// HomeSortLTE applies the LTE predicate on the "home_sort" field.
func HomeSortLTE(v int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldHomeSort, v))
}

// PinSortEQ applies the EQ predicate on the "pin_sort" field.
func PinSortEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldPinSort, v))
}

// PinSortNEQ applies the NEQ predicate on the "pin_sort" field.
func PinSortNEQ(v int) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldPinSort, v))
}

// PinSortIn applies the In predicate on the "pin_sort" field.
func PinSortIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldPinSort, vs...))
}

// PinSortNotIn applies the NotIn predicate on the "pin_sort" field.
func PinSortNotIn(vs ...int) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldPinSort, vs...))
}

// PinSortGT applies the GT predicate on the "pin_sort" field.
func PinSortGT(v int) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldPinSort, v))
}

// PinSortGTE applies the GTE predicate on the "pin_sort" field.
func PinSortGTE(v int) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldPinSort, v))
}

// PinSortLT applies the LT predicate on the "pin_sort" field.
func PinSortLT(v int) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldPinSort, v))
}

// PinSortLTE applies the LTE predicate on the "pin_sort" field.
func PinSortLTE(v int) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldPinSort, v))
}

// TopImgURLEQ applies the EQ predicate on the "top_img_url" field.
func TopImgURLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldTopImgURL, v))
}

// TopImgURLNEQ applies the NEQ predicate on the "top_img_url" field.
func TopImgURLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldTopImgURL, v))
}

// TopImgURLIn applies the In predicate on the "top_img_url" field.
func TopImgURLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldTopImgURL, vs...))
}

// TopImgURLNotIn applies the NotIn predicate on the "top_img_url" field.
func TopImgURLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldTopImgURL, vs...))
}

// TopImgURLGT applies the GT predicate on the "top_img_url" field.
func TopImgURLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldTopImgURL, v))
}

// TopImgURLGTE applies the GTE predicate on the "top_img_url" field.
func TopImgURLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldTopImgURL, v))
}

// TopImgURLLT applies the LT predicate on the "top_img_url" field.
func TopImgURLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldTopImgURL, v))
}

// TopImgURLLTE applies the LTE predicate on the "top_img_url" field.
func TopImgURLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldTopImgURL, v))
}

// TopImgURLContains applies the Contains predicate on the "top_img_url" field.
func TopImgURLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldTopImgURL, v))
}

// TopImgURLHasPrefix applies the HasPrefix predicate on the "top_img_url" field.
func TopImgURLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldTopImgURL, v))
}

// TopImgURLHasSuffix applies the HasSuffix predicate on the "top_img_url" field.
func TopImgURLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldTopImgURL, v))
}

// TopImgURLIsNil applies the IsNil predicate on the "top_img_url" field.
func TopImgURLIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldTopImgURL))
}

// TopImgURLNotNil applies the NotNil predicate on the "top_img_url" field.
func TopImgURLNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldTopImgURL))
}

// TopImgURLEqualFold applies the EqualFold predicate on the "top_img_url" field.
func TopImgURLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldTopImgURL, v))
}

// TopImgURLContainsFold applies the ContainsFold predicate on the "top_img_url" field.
func TopImgURLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldTopImgURL, v))
}

// SummariesIsNil applies the IsNil predicate on the "summaries" field.
func SummariesIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldSummaries))
}

// SummariesNotNil applies the NotNil predicate on the "summaries" field.
func SummariesNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldSummaries))
}

// AbbrlinkEQ applies the EQ predicate on the "abbrlink" field.
func AbbrlinkEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldAbbrlink, v))
}

// AbbrlinkNEQ applies the NEQ predicate on the "abbrlink" field.
func AbbrlinkNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldAbbrlink, v))
}

// AbbrlinkIn applies the In predicate on the "abbrlink" field.
func AbbrlinkIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldAbbrlink, vs...))
}

// AbbrlinkNotIn applies the NotIn predicate on the "abbrlink" field.
func AbbrlinkNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldAbbrlink, vs...))
}

// AbbrlinkGT applies the GT predicate on the "abbrlink" field.
func AbbrlinkGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldAbbrlink, v))
}

// AbbrlinkGTE applies the GTE predicate on the "abbrlink" field.
func AbbrlinkGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldAbbrlink, v))
}

// AbbrlinkLT applies the LT predicate on the "abbrlink" field.
func AbbrlinkLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldAbbrlink, v))
}

// AbbrlinkLTE applies the LTE predicate on the "abbrlink" field.
func AbbrlinkLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldAbbrlink, v))
}

// AbbrlinkContains applies the Contains predicate on the "abbrlink" field.
func AbbrlinkContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldAbbrlink, v))
}

// AbbrlinkHasPrefix applies the HasPrefix predicate on the "abbrlink" field.
func AbbrlinkHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldAbbrlink, v))
}

// AbbrlinkHasSuffix applies the HasSuffix predicate on the "abbrlink" field.
func AbbrlinkHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldAbbrlink, v))
}

// AbbrlinkIsNil applies the IsNil predicate on the "abbrlink" field.
func AbbrlinkIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldAbbrlink))
}

// AbbrlinkNotNil applies the NotNil predicate on the "abbrlink" field.
func AbbrlinkNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldAbbrlink))
}

// AbbrlinkEqualFold applies the EqualFold predicate on the "abbrlink" field.
func AbbrlinkEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldAbbrlink, v))
}

// AbbrlinkContainsFold applies the ContainsFold predicate on the "abbrlink" field.
func AbbrlinkContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldAbbrlink, v))
}

// CopyrightEQ applies the EQ predicate on the "copyright" field.
func CopyrightEQ(v bool) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyright, v))
}

// CopyrightNEQ applies the NEQ predicate on the "copyright" field.
func CopyrightNEQ(v bool) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCopyright, v))
}

// CopyrightAuthorEQ applies the EQ predicate on the "copyright_author" field.
func CopyrightAuthorEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyrightAuthor, v))
}

// CopyrightAuthorNEQ applies the NEQ predicate on the "copyright_author" field.
func CopyrightAuthorNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCopyrightAuthor, v))
}

// CopyrightAuthorIn applies the In predicate on the "copyright_author" field.
func CopyrightAuthorIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCopyrightAuthor, vs...))
}

// CopyrightAuthorNotIn applies the NotIn predicate on the "copyright_author" field.
func CopyrightAuthorNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCopyrightAuthor, vs...))
}

// CopyrightAuthorGT applies the GT predicate on the "copyright_author" field.
func CopyrightAuthorGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCopyrightAuthor, v))
}

// CopyrightAuthorGTE applies the GTE predicate on the "copyright_author" field.
func CopyrightAuthorGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCopyrightAuthor, v))
}

// CopyrightAuthorLT applies the LT predicate on the "copyright_author" field.
func CopyrightAuthorLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCopyrightAuthor, v))
}

// CopyrightAuthorLTE applies the LTE predicate on the "copyright_author" field.
func CopyrightAuthorLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCopyrightAuthor, v))
}

// CopyrightAuthorContains applies the Contains predicate on the "copyright_author" field.
func CopyrightAuthorContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldCopyrightAuthor, v))
}

// CopyrightAuthorHasPrefix applies the HasPrefix predicate on the "copyright_author" field.
func CopyrightAuthorHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldCopyrightAuthor, v))
}

// CopyrightAuthorHasSuffix applies the HasSuffix predicate on the "copyright_author" field.
func CopyrightAuthorHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldCopyrightAuthor, v))
}

// CopyrightAuthorIsNil applies the IsNil predicate on the "copyright_author" field.
func CopyrightAuthorIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldCopyrightAuthor))
}

// CopyrightAuthorNotNil applies the NotNil predicate on the "copyright_author" field.
func CopyrightAuthorNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldCopyrightAuthor))
}

// CopyrightAuthorEqualFold applies the EqualFold predicate on the "copyright_author" field.
func CopyrightAuthorEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldCopyrightAuthor, v))
}

// CopyrightAuthorContainsFold applies the ContainsFold predicate on the "copyright_author" field.
func CopyrightAuthorContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldCopyrightAuthor, v))
}

// CopyrightAuthorHrefEQ applies the EQ predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefNEQ applies the NEQ predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefIn applies the In predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCopyrightAuthorHref, vs...))
}

// CopyrightAuthorHrefNotIn applies the NotIn predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCopyrightAuthorHref, vs...))
}

// CopyrightAuthorHrefGT applies the GT predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefGTE applies the GTE predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefLT applies the LT predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefLTE applies the LTE predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefContains applies the Contains predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefHasPrefix applies the HasPrefix predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefHasSuffix applies the HasSuffix predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefIsNil applies the IsNil predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldCopyrightAuthorHref))
}

// CopyrightAuthorHrefNotNil applies the NotNil predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldCopyrightAuthorHref))
}

// CopyrightAuthorHrefEqualFold applies the EqualFold predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldCopyrightAuthorHref, v))
}

// CopyrightAuthorHrefContainsFold applies the ContainsFold predicate on the "copyright_author_href" field.
func CopyrightAuthorHrefContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldCopyrightAuthorHref, v))
}

// CopyrightURLEQ applies the EQ predicate on the "copyright_url" field.
func CopyrightURLEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldCopyrightURL, v))
}

// CopyrightURLNEQ applies the NEQ predicate on the "copyright_url" field.
func CopyrightURLNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldCopyrightURL, v))
}

// CopyrightURLIn applies the In predicate on the "copyright_url" field.
func CopyrightURLIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldCopyrightURL, vs...))
}

// CopyrightURLNotIn applies the NotIn predicate on the "copyright_url" field.
func CopyrightURLNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldCopyrightURL, vs...))
}

// CopyrightURLGT applies the GT predicate on the "copyright_url" field.
func CopyrightURLGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldCopyrightURL, v))
}

// CopyrightURLGTE applies the GTE predicate on the "copyright_url" field.
func CopyrightURLGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldCopyrightURL, v))
}

// CopyrightURLLT applies the LT predicate on the "copyright_url" field.
func CopyrightURLLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldCopyrightURL, v))
}

// CopyrightURLLTE applies the LTE predicate on the "copyright_url" field.
func CopyrightURLLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldCopyrightURL, v))
}

// CopyrightURLContains applies the Contains predicate on the "copyright_url" field.
func CopyrightURLContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldCopyrightURL, v))
}

// CopyrightURLHasPrefix applies the HasPrefix predicate on the "copyright_url" field.
func CopyrightURLHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldCopyrightURL, v))
}

// CopyrightURLHasSuffix applies the HasSuffix predicate on the "copyright_url" field.
func CopyrightURLHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldCopyrightURL, v))
}

// CopyrightURLIsNil applies the IsNil predicate on the "copyright_url" field.
func CopyrightURLIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldCopyrightURL))
}

// CopyrightURLNotNil applies the NotNil predicate on the "copyright_url" field.
func CopyrightURLNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldCopyrightURL))
}

// CopyrightURLEqualFold applies the EqualFold predicate on the "copyright_url" field.
func CopyrightURLEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldCopyrightURL, v))
}

// CopyrightURLContainsFold applies the ContainsFold predicate on the "copyright_url" field.
func CopyrightURLContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldCopyrightURL, v))
}

// KeywordsEQ applies the EQ predicate on the "keywords" field.
func KeywordsEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldEQ(FieldKeywords, v))
}

// KeywordsNEQ applies the NEQ predicate on the "keywords" field.
func KeywordsNEQ(v string) predicate.Article {
	return predicate.Article(sql.FieldNEQ(FieldKeywords, v))
}

// KeywordsIn applies the In predicate on the "keywords" field.
func KeywordsIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldIn(FieldKeywords, vs...))
}

// KeywordsNotIn applies the NotIn predicate on the "keywords" field.
func KeywordsNotIn(vs ...string) predicate.Article {
	return predicate.Article(sql.FieldNotIn(FieldKeywords, vs...))
}

// KeywordsGT applies the GT predicate on the "keywords" field.
func KeywordsGT(v string) predicate.Article {
	return predicate.Article(sql.FieldGT(FieldKeywords, v))
}

// KeywordsGTE applies the GTE predicate on the "keywords" field.
func KeywordsGTE(v string) predicate.Article {
	return predicate.Article(sql.FieldGTE(FieldKeywords, v))
}

// KeywordsLT applies the LT predicate on the "keywords" field.
func KeywordsLT(v string) predicate.Article {
	return predicate.Article(sql.FieldLT(FieldKeywords, v))
}

// KeywordsLTE applies the LTE predicate on the "keywords" field.
func KeywordsLTE(v string) predicate.Article {
	return predicate.Article(sql.FieldLTE(FieldKeywords, v))
}

// KeywordsContains applies the Contains predicate on the "keywords" field.
func KeywordsContains(v string) predicate.Article {
	return predicate.Article(sql.FieldContains(FieldKeywords, v))
}

// KeywordsHasPrefix applies the HasPrefix predicate on the "keywords" field.
func KeywordsHasPrefix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasPrefix(FieldKeywords, v))
}

// KeywordsHasSuffix applies the HasSuffix predicate on the "keywords" field.
func KeywordsHasSuffix(v string) predicate.Article {
	return predicate.Article(sql.FieldHasSuffix(FieldKeywords, v))
}

// KeywordsIsNil applies the IsNil predicate on the "keywords" field.
func KeywordsIsNil() predicate.Article {
	return predicate.Article(sql.FieldIsNull(FieldKeywords))
}

// KeywordsNotNil applies the NotNil predicate on the "keywords" field.
func KeywordsNotNil() predicate.Article {
	return predicate.Article(sql.FieldNotNull(FieldKeywords))
}

// KeywordsEqualFold applies the EqualFold predicate on the "keywords" field.
func KeywordsEqualFold(v string) predicate.Article {
	return predicate.Article(sql.FieldEqualFold(FieldKeywords, v))
}

// KeywordsContainsFold applies the ContainsFold predicate on the "keywords" field.
func KeywordsContainsFold(v string) predicate.Article {
	return predicate.Article(sql.FieldContainsFold(FieldKeywords, v))
}

// HasPostTags applies the HasEdge predicate on the "post_tags" edge.
func HasPostTags() predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, PostTagsTable, PostTagsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPostTagsWith applies the HasEdge predicate on the "post_tags" edge with a given conditions (other predicates).
func HasPostTagsWith(preds ...predicate.PostTag) predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := newPostTagsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasPostCategories applies the HasEdge predicate on the "post_categories" edge.
func HasPostCategories() predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, PostCategoriesTable, PostCategoriesPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPostCategoriesWith applies the HasEdge predicate on the "post_categories" edge with a given conditions (other predicates).
func HasPostCategoriesWith(preds ...predicate.PostCategory) predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := newPostCategoriesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasComments applies the HasEdge predicate on the "comments" edge.
func HasComments() predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CommentsTable, CommentsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCommentsWith applies the HasEdge predicate on the "comments" edge with a given conditions (other predicates).
func HasCommentsWith(preds ...predicate.Comment) predicate.Article {
	return predicate.Article(func(s *sql.Selector) {
		step := newCommentsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Article) predicate.Article {
	return predicate.Article(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Article) predicate.Article {
	return predicate.Article(sql.NotPredicates(p))
}
